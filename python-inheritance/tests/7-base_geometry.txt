 Doctest for BaseGeometry class

``BaseGeometry`` is a class with:

Public instance method: def area(self): that raises an Exception
with the message area()

Import function

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Test

Now test it:

    >>> bg = BaseGeometry()
    >>> print(bg.__doc__)
    BaseGeometry class

    >>> bg.integer_validator("some_int", 05)

    >>> bg.integer_validator("width", 54)

    >>> bg.integer_validator("name", "Charles")
    Traceback (most recent call last):
    TypeError: name must be an integer

    >>> bg.integer_validator("name")
    Traceback (most recent call last):
    TypeError: integer_validator missing 1 required positional argument: 'value'

    >>> bg.integer_validator()
    Traceback (most recent call last):
    TypeError: integer_validator missing 2 required positional arguments: 'name' and 'value'

    >>> bg.integer_validator("name", 15, 3)
    Traceback (most recent call last):
    TypeError: integer_validator() takes 3 positional arguments but 4 were given 
